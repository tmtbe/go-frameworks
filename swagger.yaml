swagger: '2.0'
info:
  title: Dell
  version: '1.0'
host: 'localhost:8081'
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: user
paths:
  /users:
    parameters: []
    get:
      summary: Get User Info by User ID
      tags:
        - user
      responses:
        '200':
          description: User Found
          schema:
            $ref: '#/definitions/User'
          examples:
            Get User Alice Smith:
              id: 142
              firstName: Alice
              lastName: Smith
              email: alice.smith@gmail.com
              dateOfBirth: '1997-10-31'
              emailVerified: true
              signUpDate: '2019-08-24'
        '404':
          description: User Not Found
          schema:
            type: 'null'
          examples: {}
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
      parameters:
        - type: integer
          in: query
          name: id
          minimum: 0
          format: int32
  /user:
    post:
      tags:
        - user
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Missing Required Information
          schema:
            type: 'null'
        '409':
          description: Email Already Taken
          schema:
            type: 'null'
      description: Create a new user.
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/User'
          description: Post the necessary fields for the API to create a new user.
          x-examples: {}
definitions:
  User:
    title: User
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the given user.
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        format: email
      dateOfBirth:
        type: string
        format: date
        example: '1997-10-31'
      emailVerified:
        type: boolean
        description: Set to true if the user's email has been verified.
      createDate:
        type: string
        format: date
        description: The date that the user was created.
    required:
      - firstName
      - lastName
      - email
      - dateOfBirth
      - emailVerified
