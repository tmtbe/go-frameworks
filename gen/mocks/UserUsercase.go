// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	app "test/internal/pkg/app"

	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"

	user "test/gen/restapi/operations/user"
)

// UserUsercase is an autogenerated mock type for the UserUsercase type
type UserUsercase struct {
	mock.Mock
}

// GetUsersUserID provides a mock function with given fields: ctx, params
func (_m *UserUsercase) GetUsersUserID(ctx *gin.Context, params *user.GetUsersUserIDParams) *app.Response {
	ret := _m.Called(ctx, params)

	var r0 *app.Response
	if rf, ok := ret.Get(0).(func(*gin.Context, *user.GetUsersUserIDParams) *app.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*app.Response)
		}
	}

	return r0
}

// PostUser provides a mock function with given fields: ctx, params
func (_m *UserUsercase) PostUser(ctx *gin.Context, params *user.PostUserParams) *app.Response {
	ret := _m.Called(ctx, params)

	var r0 *app.Response
	if rf, ok := ret.Get(0).(func(*gin.Context, *user.PostUserParams) *app.Response); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*app.Response)
		}
	}

	return r0
}
